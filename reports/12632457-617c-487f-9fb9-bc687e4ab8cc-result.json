{"name": "test_delete_project", "status": "failed", "statusDetails": {"message": "AssertionError: Unable to delete project\nassert {'assigneeType': 'PROJECT_LEAD', 'avatarUrls': {'16x16': 'https://neeteshrajoriya3.atlassian.net/rest/api/3/universal_avatar/view/type/project/avatar/10417?size=xsmall', '24x24': 'https://neeteshrajoriya3.atlassian.net/rest/api/3/universal_avatar/view/type/project/avatar/10417?size=small', '32x32': 'https://neeteshrajoriya3.atlassian.net/rest/api/3/universal_avatar/view/type/project/avatar/10417?size=medium', '48x48': 'https://neeteshrajoriya3.atlassian.net/rest/api/3/universal_avatar/view/type/project/avatar/10417'}, 'components': [], 'description': 'TOUGH LEAST CARE POSITIVE BUILD ANYTHING.', ...} == 204", "trace": "fixturefunc = <function verify_deleted_project at 0x0000026BFDF3D080>, request = <FixtureRequest for <Function test_delete_project>>\nkwargs = {'context': namespace(response={'expand': 'description,lead,issueTypes,url,projectKeys,permissions,insight', 'self': '...'properties': {}, 'entityId': '5c9d56ee-2c63-4781-9280-72d34940b860', 'uuid': '5c9d56ee-2c63-4781-9280-72d34940b860'})}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.venv\\Lib\\site-packages\\_pytest\\fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = namespace(response={'expand': 'description,lead,issueTypes,url,projectKeys,permissions,insight', 'self': 'https://neet... 'properties': {}, 'entityId': '5c9d56ee-2c63-4781-9280-72d34940b860', 'uuid': '5c9d56ee-2c63-4781-9280-72d34940b860'})\n\n    @then(\"project should get deleted\")\n    def verify_deleted_project(context:SimpleNamespace):\n        response=context.response\n>       assert response == 204, f\"Unable to delete project\"\nE       AssertionError: Unable to delete project\nE       assert {'assigneeType': 'PROJECT_LEAD', 'avatarUrls': {'16x16': 'https://neeteshrajoriya3.atlassian.net/rest/api/3/universal_avatar/view/type/project/avatar/10417?size=xsmall', '24x24': 'https://neeteshrajoriya3.atlassian.net/rest/api/3/universal_avatar/view/type/project/avatar/10417?size=small', '32x32': 'https://neeteshrajoriya3.atlassian.net/rest/api/3/universal_avatar/view/type/project/avatar/10417?size=medium', '48x48': 'https://neeteshrajoriya3.atlassian.net/rest/api/3/universal_avatar/view/type/project/avatar/10417'}, 'components': [], 'description': 'TOUGH LEAST CARE POSITIVE BUILD ANYTHING.', ...} == 204\n\ntests\\test_jira_project.py:77: AssertionError"}, "description": "../features/test.feature: Delete a Project", "attachments": [{"name": "log", "source": "d54d2317-f890-4d80-b2e0-3fe4dc430c6f-attachment.txt", "type": "text/plain"}], "start": 1744546183539, "stop": 1744546184141, "uuid": "b7d57f60-c537-45e2-853f-0d57cf7440f1", "historyId": "afb51e02d66e9a2de921b62e5c262d5f", "testCaseId": "afb51e02d66e9a2de921b62e5c262d5f", "fullName": "tests.test_jira_project#test_delete_project", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_jira_project"}, {"name": "host", "value": "user"}, {"name": "thread", "value": "19500-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_jira_project"}]}