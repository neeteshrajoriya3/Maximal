{"name": "test_update_project", "status": "failed", "statusDetails": {"message": "AssertionError: verify_update_project/then: Cannot update project:404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "fixturefunc = <function verify_update_project at 0x0000021E076862A0>, request = <FixtureRequest for <Function test_update_project>>\nkwargs = {'context': namespace(response=<Response [404]>)}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.venv\\Lib\\site-packages\\_pytest\\fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = namespace(response=<Response [404]>)\n\n    @then(\"project should get updated\")\n    def verify_update_project(context:SimpleNamespace):\n        response=context.response\n        print(f\"This is response of update: {response}\")\n        assert response is not None,f\"verify_update_project/then: Cannot update project: {response.status_code}\"\n>       assert response.status_code==200,f\"verify_update_project/then: Cannot update project:{response.status_code}\"\nE       AssertionError: verify_update_project/then: Cannot update project:404\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntests\\test_jira_project.py:134: AssertionError"}, "description": "../features/test.feature: Update Project", "attachments": [{"name": "log", "source": "caf4aae6-3051-4fa1-bf1d-42f88e5c83d0-attachment.txt", "type": "text/plain"}], "start": 1744615718144, "stop": 1744615719036, "uuid": "819f40b9-5454-4417-88c7-8125621787e2", "historyId": "aaecf939aea7cd37465fdfc9a6a4e494", "testCaseId": "aaecf939aea7cd37465fdfc9a6a4e494", "fullName": "tests.test_jira_project#test_update_project", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_jira_project"}, {"name": "host", "value": "user"}, {"name": "thread", "value": "13384-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_jira_project"}]}