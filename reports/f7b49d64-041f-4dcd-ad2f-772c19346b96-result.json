{"name": "test_get_all_project_types", "status": "broken", "statusDetails": {"message": "AttributeError: 'MissingSchema' object has no attribute 'status_code'", "trace": "fixturefunc = <function verify_all_project_types at 0x000001797BD28220>, request = <FixtureRequest for <Function test_get_all_project_types>>\nkwargs = {'context': namespace(response=MissingSchema(\"Invalid URL 'None': No scheme supplied. Perhaps you meant https://None?\")), 'jira_project_types': <utils.jira_project_types_api.JIRAProjectTypeAPI object at 0x000001797BD09460>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.venv\\Lib\\site-packages\\_pytest\\fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\njira_project_types = <utils.jira_project_types_api.JIRAProjectTypeAPI object at 0x000001797BD09460>\ncontext = namespace(response=MissingSchema(\"Invalid URL 'None': No scheme supplied. Perhaps you meant https://None?\"))\n\n    @then(\"I get a list of all project types\")\n    def verify_all_project_types(jira_project_types: JIRAProjectTypeAPI, context: SimpleNamespace):\n        jira_project_types.logger.info(\"inside test_get_all_project_types/then\")\n        response=context.response\n        assert response is not None,f\"Cannot display project types\"\n>       assert response.status_code==200, f\"Cannot display project types: {response.status_code}: {response.text}\"\nE       AttributeError: 'MissingSchema' object has no attribute 'status_code'\n\ntests\\test_project_type.py:23: AttributeError"}, "description": "../features/project_types.feature: Get all project types", "attachments": [{"name": "log", "source": "5e7fee22-0221-4ed1-97f7-897fd7730915-attachment.txt", "type": "text/plain"}], "start": 1744633550660, "stop": 1744633550678, "uuid": "f09253e8-f0bd-4c8d-8afd-32dda4efcfc4", "historyId": "450634356ad7e242f359f060a7292f67", "testCaseId": "450634356ad7e242f359f060a7292f67", "fullName": "tests.test_project_type#test_get_all_project_types", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_project_type"}, {"name": "host", "value": "user"}, {"name": "thread", "value": "5816-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_project_type"}]}