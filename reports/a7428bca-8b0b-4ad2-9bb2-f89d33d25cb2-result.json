{"name": "test_get_accessible_project_type_by_key", "status": "failed", "statusDetails": {"message": "AssertionError: No response from API\nassert None is not None", "trace": "fixturefunc = <function verify_accessible_project_type_by_key at 0x0000022DE0331760>, request = <FixtureRequest for <Function test_get_accessible_project_type_by_key>>\nkwargs = {'context': namespace(response=None), 'jira_project_types': <utils.jira_project_types_api.JIRAProjectTypeAPI object at 0x0000022DE02DA600>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.venv\\Lib\\site-packages\\_pytest\\fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\njira_project_types = <utils.jira_project_types_api.JIRAProjectTypeAPI object at 0x0000022DE02DA600>, context = namespace(response=None)\n\n    @then(\"I get a list of all accessible project types\")\n    def verify_accessible_project_type_by_key(jira_project_types: JIRAProjectTypeAPI, context:SimpleNamespace):\n        jira_project_types.logger.info(\"Inside test_get_accessible_project_type_by_key/then\")\n        response=context.response\n        jira_project_types.logger.info(f\"Response for Accessible Project Type: {response}\")\n>       assert response is not None,f\"No response from API\"\nE       AssertionError: No response from API\nE       assert None is not None\n\ntests\\test_project_type.py:73: AssertionError"}, "description": "../features/project_types.feature: Get accessible project type by key", "attachments": [{"name": "log", "source": "28a50999-6b0b-4e0e-a373-f7e312b0c44b-attachment.txt", "type": "text/plain"}], "start": 1744637030949, "stop": 1744637031486, "uuid": "994ce100-b51a-4156-945f-b96d31b157c3", "historyId": "59734865a7b661e13938f10dbb6b0295", "testCaseId": "59734865a7b661e13938f10dbb6b0295", "fullName": "tests.test_project_type#test_get_accessible_project_type_by_key", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_project_type"}, {"name": "host", "value": "user"}, {"name": "thread", "value": "21856-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_project_type"}]}