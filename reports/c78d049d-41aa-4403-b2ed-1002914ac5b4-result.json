{"name": "test_fetch_project", "status": "failed", "statusDetails": {"message": "AssertionError: Invalid project data\nassert ('id' in <Response [200]>)", "trace": "fixturefunc = <function verify_project_response at 0x0000026181AA9800>, request = <FixtureRequest for <Function test_fetch_project>>\nkwargs = {'context': namespace(response=<Response [200]>)}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n.venv\\Lib\\site-packages\\_pytest\\fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext = namespace(response=<Response [200]>)\n\n    @then(\"projects details should be displayed\")\n    def verify_project_response(context: SimpleNamespace):\n        response = context.response\n        assert response is not None, \"Unable to fetch project\"\n>       assert \"id\" in response and \"name\" in response, \"Invalid project data\"\nE       AssertionError: Invalid project data\nE       assert ('id' in <Response [200]>)\n\ntests\\test_jira_project.py:40: AssertionError"}, "description": "../features/test.feature: Fetch a Project", "attachments": [{"name": "log", "source": "9adcf410-bf8e-46d6-b1ad-48c411143f71-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "e7363807-61b5-4d04-aac4-26f18de1f1f7-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "bda22d9c-60f5-477a-a636-b83f060583fd-attachment.txt", "type": "text/plain"}], "start": 1744539743881, "stop": 1744539744514, "uuid": "ed025392-d432-4033-8e05-327a626b8443", "historyId": "613debc79163584360902382b927c352", "testCaseId": "613debc79163584360902382b927c352", "fullName": "tests.test_jira_project#test_fetch_project", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_jira_project"}, {"name": "host", "value": "user"}, {"name": "thread", "value": "684-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_jira_project"}]}